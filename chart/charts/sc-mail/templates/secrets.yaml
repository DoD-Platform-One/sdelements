{{- $registryUsername := required "Container registry username is required, e.g. '--set global.imageRegistryUsername=...' or in values.yaml" .Values.global.imageRegistryUsername -}}
{{- $registryPassword := required "Container registry password is required, e.g. '--set global.imageRegistryPassword=...' or in values.yaml" .Values.global.imageRegistryPassword -}}
{{- $smartHostType := include "mail.smartHostType" . -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ .Release.Name }}-mailer-secrets
  labels:
    {{- include "library.labels" . | nindent 4 }}
type: Opaque
data:
  {{- if eq $smartHostType "SES" }}
  SES_USER: {{ required "A smart host username is required" .Values.config.smartHostUser | b64enc }}
  SES_PASSWORD: {{ required "A smart host password is required" .Values.config.smartHostPassword | b64enc }}
  {{- else if eq $smartHostType "GMAIL" }}
  GMAIL_USER: {{ required "A smart host username is required" .Values.config.smartHostUser | b64enc }}
  GMAIL_PASSWORD: {{ required "A smart host password is required" .Values.config.smartHostPassword | b64enc }}
  {{- else if eq $smartHostType "SMARTHOST" }}
  SMARTHOST_USER: {{ default "none" .Values.config.smartHostUser | b64enc }}
  SMARTHOST_PASSWORD: {{ default "none" .Values.config.smartHostPassword | b64enc }}
  {{- end }}
  {{- if .Values.config.smartHostAliases }}
  SMARTHOST_ALIASES: {{ .Values.config.smartHostAliases | b64enc }}
  {{- end }}

{{- if and ( not .Values.global.registrySecretName ) ( not .Values.registrySecretName ) }}
{{ include "library.registrySecret" (merge . ( dict "registrySecretPath" "conf/registry-secrets.json")) }}
{{- end }}
