### Default values for the CAM microservice helm chart.
### This is a YAML-formatted file.
### Declare variables to be passed into your templates.

global:
  enabled: true
  enableNestedDependencies: false

  ## Default image tag.
  ## The version of container images for SDE to run
  ## Ref: https://docs.sdelements.com
  ##
  # imageTag: latest

  ## Provide a name in place of `sde` for `app:` labels
  ##
  #nameOverride: ""

  ## Provide a name to substitute for the full names of resources
  ##
  #fullnameOverride: ""

  ## Configuration options and crentials to fetch images from private
  ## registries/repositories. These are provided by SDElements support staff on
  ## request upon purchase of the SDElements product.
  ##
  imageRegistry: repository.securitycompass.com

  # Name of a kubernetes.io/dockerconfigjson secret to use for pulling containers that is defined
  # external to the one created by the helm chart.
  # "security-compass-secret" is a reserved name for the secret created by this helm chart.
  registrySecretName: security-compass-secret

  # Format: $imageRegistry $imageOrganization $imageSource $imageName $imageTag
  # repository.securitycompass.com/sde-docker-prod/sde/postgres-bespoke:latest
  imageRegistryFormat: "%s/sde-docker-%s/%s/%s:%s"
  #imageRegistryUsername: acmecorp
  #imageRegistryPassword: myPassword
  imageOrganization: prod  # dev/staging/prod
  imageSource: sde
  imagePullPolicy: IfNotPresent

  cam:
    broker: {}
      #user: cam
      #password:
      #secretName:
      #passwordSecretKey:
      #vhost:
    database: {}
      #user: cam
      #password:
      #secretName:
      #passwordSecretKey:
    sde: {}
      #secretName:
      #jwtSecretKey:

  ## Configuration for running on Openshift
  # openshift:
  #   enabled: false

replicas: 1
#port: 3000
#imageTag: latest
#imagePullPolicy: IfNotPresent
#imageSource: dccsr
#imageName: cam
#initImageName: shared-init
initImageTag: 2024.2.2
useDatabaseSubchart: false
useBrokerSubchart: false
#readinessEnabled: false
#readinessPath: "/api/"
#apiPrefix: "api/asset"
#databaseSchemaName: cam

# RabbitMQ configuration
#brokerHost: sde-broker-headless
#brokerUser: cam
#brokerPort: 5672
#brokerVhost: rabbit

## User/Group options
# uid: 999
# gid: 1000
# fsgid: 1000

# CAM sentry config
sentry: {}
  # dsn: ""
  # environment: develop
  # release: develop
  # traceSampleRate: 0.1
  # maxBreadcrumbs: 50
  # debug: "false"
  # attachStackTrace: "false"
  # excludeUA: "kube-probe|nagios-plugins|rez0"

# CAM broker config
broker: {}
  #secretName:
  #passwordSecretKey:

# CAM database config
database: {}
  #secretName:
  #passwordSecretKey:

sde: {}
  #worker: worker-10
  #port: 8080
  #apiPath: "/api/v2"
  #secretName:
  #jwtSecretKey:

extraEnvVars: {}
#  MY_TEST_VARIABLE: true

## Container resource usage options
resources:
  requests:
    cpu: 10m
    memory: 16Mi

networkPolicies:
  cam:
    podSelector:
      matchLabels:
        name: '{{ include "cam.deploymentName" . }}'
    ingress:
      - selectors:
          - podSelector:
              matchLabels:
                name: "{{ include \"library.trimmedName\" . }}-web"
          - podSelector:
              matchLabels:
                name: "{{ include \"library.trimmedName\" . }}-worker-10"
          - podSelector:
              matchLabels:
                name: "{{ include \"library.trimmedName\" . }}-worker-17"
          - podSelector:
              matchLabels:
                name: "{{ include \"library.trimmedName\" . }}-worker-15-sde-medium"
          - podSelector:
              matchLabels:
                name: "{{ include \"library.trimmedName\" . }}-worker-18-sde-low"
        ports:
          - port: '{{ include "cam.port" . }}'
