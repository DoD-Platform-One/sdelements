### Default values for the SDE Worker Helm Chart.
### This is a YAML-formatted file.
### Declare variables to be passed into your templates.

## Options & settings accessible by all charts
global:
  ## Provide a name in place of `sde` for `app:` labels
  ##
  #nameOverride: ""

  ## Provide a name to substitute for the full names of resources
  ##
  #fullnameOverride: ""

  ## Configuration options and crentials to fetch images from private
  ## registries/repositories. These are provided by SDElements support staff on
  ## request upon purchase of the SDElements product.
  ##
  imageRegistry: docker.sdelements.com
  #imageRegistry: docker-dev.sdelements.com

  # Format: $imageRegistry $imageOrganization $imageSource $imageName $imageTag
  # docker.sdelements.com / default_organization - (sde/3rd) - cert-creator : latest
  # docker-dev.sdelements.com / dev _ (sde/3rd) / cert-creator : latest
  #imageRegistryFormat: "%s/%s_%s/%s:%s"
  imageRegistryFormat: "%s/%s-%s-%s:%s"
  imageRegistryUsername: acmecorp
  imageRegistryPassword: SuperSecretPassword
  imageOrganization: default_organization
  #imageOrganization: dev
  imagePullPolicy: IfNotPresent
  #imageSource: sde
  #
  # Fully Qualified Domain Name(s)
  #
  # fqdn: example.com
  # DNS Aliases & Extra names
  # FQDN and alternateDnsNames are used to create DNS records and
  # get certificates issued dynamically.
  # Connections to URLs defined in these are encrypted by default using Cert Manager
  # and if not defined will fall back to Custom Certs/self-signed Certs.
  # alternateDnsNames:
  #  - alias.example.com
  #  - othername.example.com
  # alternateVirtualHosts are used to create config sections in the ingress and
  # can be optionally used with a custom cert.
  # When custom certs are configured any connections to these URLs will be encrypted using said certs,
  # in case custom certs are not configured the ingress will back to using self signed certs.
  # alternateVirtualHosts:
  #  - externally-managed-dns-record.example.com

  ## Feature flags that enable/disable subcharts and subchart features
  # that need to be specified before runtime because they affect how subcharts
  # deploy themselves
  #

  useSubcharts: false

  # Global PAS configuration
  pas:
    #databasePrefix: pas
    #databaseUser: pas
    #baseUrl: /pas
    # Enable or disable custom plugin functionality
    #enableCustomPlugins: true
    # Max file size for uploaded plugins (bytes)
    #maxPluginFileSize: 10000000
    # Name of the plugin service celery queue to listen on
    #pluginServiceQueueName: plugin_service_worker
    # Name of the async worker celery queue to listen on
    #asyncWorkerQueueName: pas_async_worker
    # Global secret name for PAS secrets
    #secretName:
    # Global PAS broker config
    broker: {}
      #user: pas
      #password:
      #secretName:
      #passwordSecretKey:
      #vhost:
    # Global PAS database config
    database: {}
      #user: pas
      #password:
      #secretName:
      #passwordSecretKey:

  database: {}
    #adminClientUser: sde
    #host:
    #port:

  broker: {}
    #adminClientUser: sde
    #adminVhost: sde

sc-database: {}
  #secretName:

sc-broker: {}
  #secretName:

## Chart Configuration
# Include database subchart in deployment
useDatabaseSubchart: true
# Include broker subchart in deployment
useBrokerSubchart: true
# Include SDE secret definition
includeSDESecret: true

## PAS API container configuration
#imageName: pas-api
#imageTag: <App Version>

# SDE API Url
sdeAPIServiceMethod: http
#sdeAPIServiceName: mock-sde
#sdeAPIServicePort: 8000

# Name of queue to enqueue SDE jobs
#sdeQueueName: celery
# Python console logging level. One of DEBUG, INFO, WARNING, ERROR, CRITICAL
#logLevel: INFO
# The number of gunicorn workers to spin up
#workerCount: 4
# Gunicorn log level
#gunicornLogLevel: info
#customPluginVolumeSize: 2Gi

## PAS init container configuration
#initImageName: pas-app-init
#initImageTag: <App Version>

# PAS Init container config
admin:
  database: {}
    # The name of the default database
    #defaultDatabase: postgres
    # Admin username
    #user: postgres
    #secretName:
    #passwordSecretKey:
  broker: {}
    # Admin username
    #user: rabbit
    #secretName:
    #passwordSecretKey:

# PAS broker config
broker: {}
  #secretName:
  #passwordSecretKey:

# PAS database config
database: {}
  #secretName:
  #passwordSecretKey:

sde:
  # SDE JWT Secret
  #jwtSecret: s3cr3tk3y
  # Secret name for SDE secrets
  #secretName:
  # SDE broker secret config
  broker: {}
    #secretName:
    #passwordSecretKey:
