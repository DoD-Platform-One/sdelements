### Default values for the PAS Async Worker Helm Chart.
### This is a YAML-formatted file.
### Declare variables to be passed into your templates.

## Options & settings accessible by all charts
global:
  ## Provide a name in place of `sde` for `app:` labels
  ##
  #nameOverride: ""

  ## Provide a name to substitute for the full names of resources
  ##
  #fullnameOverride: ""

  ## Configuration options and crentials to fetch images from private
  ## registries/repositories. These are provided by SDElements support staff on
  ## request upon purchase of the SDElements product.
  ##
  imageRegistry: repository.securitycompass.com

  # Format: $imageRegistry $imageOrganization $imageSource $imageName $imageTag
  #imageRegistryFormat: "%s/%s_%s/%s:%s"
  # repository.securitycompass.com/sde-docker-prod/sde/pas_async_worker:latest
  imageRegistryFormat: "%s/sde-docker-%s/%s/%s:%s"
  imageRegistryUsername: acmecorp
  imageRegistryPassword: SuperSecretPassword
  imageOrganization: prod #dev/staging/prod
  imageSource: sde
  imagePullPolicy: IfNotPresent
  #imageSource: sde
  #
  # Fully Qualified Domain Name(s)
  #
  # fqdn: example.com
  # DNS Aliases & Extra names
  # FQDN and alternateDnsNames are used to create DNS records and
  # get certificates issued dynamically.
  # Connections to URLs defined in these are encrypted by default using Cert Manager
  # and if not defined will fall back to Custom Certs/self-signed Certs.
  # alternateDnsNames:
  #  - alias.example.com
  #  - othername.example.com
  # alternateVirtualHosts are used to create config sections in the ingress and
  # can be optionally used with a custom cert.
  # When custom certs are configured any connections to these URLs will be encrypted using said certs,
  # in case custom certs are not configured the ingress will back to using self signed certs.
  # alternateVirtualHosts:
  #  - externally-managed-dns-record.example.com

  ## Feature flags that enable/disable subcharts and subchart features
  # that need to be specified before runtime because they affect how subcharts
  # deploy themselves
  #

  pas:
    #databasePrefix: pas
    #enableCustomPlugins: true
    #maxPluginFileSize: 10000000

    # Name of the plugin service celery queue to listen on
    #pluginServiceQueueName: plugin_service_worker
    # Name of the async worker celery queue to listen on
    #asyncWorkerQueueName: pas_async_worker
    # Global PAS broker config
    broker: {}
      ## Username for broker user
      #user: pas
      #password:
      #secretName:
      #passwordSecretKey:
      #vhost:
    # Global PAS database config
    database: {}
      #user: pas
      #password:
      #secretName:
      #passwordSecretKey:
    # PAS S3 config
    sharedStorage: {}
      #secretName:
      # Name of secret key for Access Key Id
      #accessKeyIdSecretKey: PAS_S3_ACCESS_KEY
      # Name of secret key for Secret Access Key
      #secretAccessKeySecretKey: PAS_S3_SECRET_ACCESS_KEY
      # S3 Bucket name for PAS
      #bucketName: "pas"
      # S3 URL for API Endpoint
      #s3Url:
      # S3 bucket subpath
      #s3BucketPath:
      # AWS region (if applicable)
      #region: "ca-central-1"
      # Maximum number of retries for initialization
      #initMaxRetryAttempts: 5
      # Number of seconds in between retries for initializaiton
      #initRetrySleepDuration: 5
      # Boolean representing whether to use SSL or not
      #useSsl: "true"
      # Boolean representing whether to verify SSL certs or not
      #verifyCerts: "true"
    # PAS Datastore settings
    datastore: {}
      # Service name if deployed in cluster
      #serviceName: redis-master
      # Hostname for external instance
      #host:
      #port: 6379
      #useSsl: false

  database:
    adminClientUser: sde

  broker:
    #adminClientUser: sde
    adminVhost: sde
    #user: rabbit
    #requireSSL: false
    #host: broker-headless
    #port: 5672
    #url: amqp://www.example.com

  # S3 config from SDE
  sharedStorage: {}
    #secretName:
    # Name of secret key for Access Key Id
    #accessKeyIdSecretKey: PAS_S3_ACCESS_KEY
    # Name of secret key for Secret Access Key
    #secretAccessKeySecretKey: PAS_S3_SECRET_ACCESS_KEY
    # S3 Bucket name for PAS
    #bucketName: "pas"
    # S3 URL for API Endpoint
    #s3Url: "https://my-bucket.s3.us-west-2.amazonaws.com/"
    # S3 bucket subpath
    #s3BucketPath: "/path/to/storage/in/bucket/
    #s3AccessKey: "accesskey"
    #s3SecretKey: "secretKey"

  # Global datastore config
  datastore: {}

  ## Configuration for Sentry
  # sentry:
  #   enabled: false
  #   environment: develop
  #   sampleRate: 0.1
  #   traceSampleRate: 0.1

  ## Configuration for running on Openshift
  # openshift:
  #   enabled: false

#  enableNodeSelector: true


## Chart Configuration
# Include broker subchart in deployment
useBrokerSubchart: true
# Include database subchart in deployment
useDatabaseSubchart: true
# Include shared storage subchart in deployment
minio:
    enabled: false
# Include datastore subchart in deployment
datastore:
    enabled: false

useLocalDevDbConfig: true

## PAS Async Worker container configuration
#imageName: pas-async-worker
##  Default image tag.
#imageTag: <App Version>
## Celery result backend
resultBackend: rpc://
## Celery queue names
#asyncWorkerQueueName: pas_async_worker
#pluginServiceQueueName: plugin_service_worker
## Celery log level. One of DEBUG, INFO, WARNING, ERROR, CRITICAL
#celeryLogLevel: INFO
## Number of celery worker processes to launch
#celeryWorkerCount: 4
## Max number of celery tasks before recreating the worker.
## Lowering the amount can help keep memory usage lower over time.
#celeryMaxTasksPerChild: 10

## User/Group options
# uid: 999
# gid: 101
# fsgid: 101

# PAS broker config
rabbitmq:
  nameOverride: "broker"
  #replicaCount: 1
  image:
    # registry: repository.securitycompass.com
    repository: sde-docker-prod/sde/rabbitmq
    # tag: 3.11.15-debian-11-r0
  tls: {}
    # enabled: false
    # autoGenerated: false
    # failIfNoPeerCert: true
    # sslOptionsVerify: verify_peer
    # sslOptionsPassword:
    #   enabled: false
    #   existingSecret: ""
    #   key: ""
    #   password: ""
    # caCertificate: ""
    # serverCertificate: ""
    # serverKey: ""
    # existingSecret: ""
    # existingSecretFullChain: false
    # overrideCaCertificate: ""
  auth:
    username: rabbit
    #password: "myrabbitmqpassword"
    #existingPasswordSecret: ""
  extraConfiguration: |-
    default_vhost = {{ .Values.global.broker.adminVhost }}

  ## URL is mutually exclusive to user/pass/host/vhost and takes precidence over
  ## those values if specified
  #url: amqp://user:pass@host:post/vhost

  # persistence:
    # enabled: true
    # storageClass: "my-storage-class"
    # Provide an existing PersistentVolumeClaims
    ## The value is evaluated as a template. So, for example, the name can depend on .Release or .Chart
    #existingClaim: ""
  resources:
    requests:
      cpu: 10m
      memory: 150Mi
    limits:
      cpu: 2
      memory: 2048Mi
  # metrics:
  #   enabled: false
  #   serviceMonitor:
  #     enabled: false

# PAS database config
database: {}
  #secretName:
  #passwordSecretKey:

# PAS broker config
broker: {}
  #secretName:
  #passwordSecretKey:
  #adminClientUser: sde
  #adminVhost: sde


# PAS Async Worker service S3 config
sharedStorage: {}
  # Name of secret key for Access Key Id
  #accessKeyIdSecretKey: PAS_S3_ACCESS_KEY
  # Name of secret key for Secret Access Key
  #secretAccessKeySecretKey: PAS_S3_SECRET_ACCESS_KEY
  # S3 Bucket name for PAS
  #bucketName:
  # S3 bucket subpath
  #s3BucketPath:
  # AWS region (if applicable)
  #region:
  # Maximum number of retries for initialization
  #initMaxRetryAttempts: 5
  # Number of seconds in between retries for initializaiton
  #initRetrySleepDuration: 5
  # Boolean representing whether to use SSL or not
  #useSsl:
  # Boolean representing whether to verify SSL certs or not
  #verifyCerts:

## Configuration for Sentry
# sentry:
#   enabled: false
#   dsn: https://xxxxxx.ingest.sentry.io/000000
#   environment: develop
#   sampleRate: 0.1
#   traceSampleRate: 0.1
