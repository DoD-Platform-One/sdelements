{{/*
Template to create the registry secret.
Requires dictionary with root context and `registrySecretPath` set.
*/}}
{{- define "library.registrySecret" -}}
{{- $registryUsername := required "Container registry username is required, e.g. '--set global.imageRegistryUsername=...' or in values.yaml" .Values.global.imageRegistryUsername -}}
{{- $registryPassword := required "Container registry password is required, e.g. '--set global.imageRegistryPassword=...' or in values.yaml" .Values.global.imageRegistryPassword -}}
---
apiVersion: v1
kind: Secret
metadata:
  name: {{ include "library.registrySecretName" . }}
  labels:
    {{- include "library.labels" . | nindent 4 }}
  {{- if eq ( default false .Values.global.disableHelmHooks ) false }}
  annotations:
    "helm.sh/hook": "pre-install,pre-upgrade"
    "helm.sh/hook-delete-policy": "before-hook-creation"
  {{- end }}
type: kubernetes.io/dockerconfigjson
data:
  .dockerconfigjson: {{ tpl ( .Files.Get .registrySecretPath ) . | b64enc  }}
{{- end }}

