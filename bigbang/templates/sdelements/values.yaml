{{- $pkg := "sdelements" }}
{{- define "bigbang.defaults.sdelements" -}}
global:
  imageRegistry: registry1.dso.mil
  imageRegistryFormat: "%s/%s/%s/%s:%s"
  imagePullPolicy: Always
  imageOrganization: ironbank/security-compass
  imageSource: sd-elements
  imageRegistryUsername: username
  imageRegistryPassword: password
  sharedStorage:
    bucketName: sde-bucket        # If using MinIO, ensure value matches a bucket in `minio` section
    s3Url: http://sdelements-minio-hl:9000/
    s3AccessKey: accesskey    # If using MinIO, ensure value matches `accessKey` in `minio` section
    s3SecretKey: secretkey    # If using MinIO, ensure value matches `secretKey` in `minio` section
  rwx:
    enabled: false
  nginxIngress:
    enabled: false # This will stop the creation of an Ingress resource, which isn't required when using Istio.
sde:
  enableJITT: false
web:
  replicas: 1
  imageName: nginx
  uid: 993
  gid: 993
  fsgid: 49
sc-jitt:
  replicas: 1
  imageSource: jitt
  imageName: nginx
  uid: 993
  gid: 993
  fsgid: 49
rabbitmq:
  replicaCount: 1
  image:
    repository: ironbank/bitnami/rabbitmq
    tag: 3.12.13
  containerSecurityContext:
    runAsUser: 1001
  podSecurityConext:
    fsGroup: 1001
  initContainers: []
  extraEnvVars: []
postgresql:
  image:
    repository: ironbank/opensource/postgres/postgresql12
    tag: 12.18
  primary:
    containerSecurityContext:
      runAsUser: 26
      runAsGroup: 26
    podSecurityContext:
      fsGroup: 26
sc-mail:
  imageName: exim
worker:
  imageName: mod_wsgi
  uid: 48
  gid: 48
  fsgid: 49
reporting:
  enabled: true
  imageName: reporting
  imagePullPolicy: Always
  enableTls: true
  uid: 1001
  gid: 1001
  nginxuid: 993
  nginxgid: 993
  replicas: 1
sc-datastore:
  imageOrganization: ironbank/opensource
  imageSource: redis
  imageName: redis6
  uid: 1001
  gid: 1001
  fsgid: 1001
  replicas: 1
sc-cam:
  imageName: cam
  initImageName: common-init
  uid: 1001
  gid: 1001
job:
  specifications:
    trend-reporting:
      uid: 998
      gid: 996
      fsgid: 996
# The settings below are for adjusting the big bang customizations
istio:
  enabled: {{ .Values.istio.enabled }}
  gateways:
    - istio-system/public
ingress-nginx:
  enabled: false
efsVolumes:
  enabled: false
networkPolicies:
  enabled: false
minio-tenant:
  enabled: false
  tenant:
    image:
      repository: registry1.dso.mil/ironbank/opensource/minio/minio
    name: sdelements-minio
  env:
    - name: MINIO_BROWSER
      value: "off"
  pools:
    - servers: 1
      name: pool-0
      volumesPerServer: 4
      size: 10Gi
  certificate:
    requestAutoCert: false
  buckets:
    - name: sde-bucket
  configuration:
    name: sdelements-minio-env-configuration
  secrets:
    name: sdelements-minio-env-configuration
    accessKey: accesskey
    secretKey: secretkey
minio:
  enabled: false
  rootUser: admin
  rootPassword: password
  tls:
    enabled: false
  buckets:
    - name: sde-bucket            # should match global.sharedStorage.bucketName
      policy: none
      purge: false
  users:
    - accessKey: accesskey    # should match global.sharedStorage.s3AccessKey
      secretKey: secretkey    # should match global.sharedStorage.s3SecretKey
      policy: readwrite
{{- end }}

{{- /* Create secret */ -}}
{{- if (get .Values $pkg).enabled }}
{{- include "values-secret" (dict "root" $ "package" (get .Values $pkg) "name" $pkg "defaults" (include (printf "bigbang.defaults.%s" $pkg) .)) }}
{{- end }}
